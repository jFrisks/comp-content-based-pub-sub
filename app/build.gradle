/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //For project nessie (Google Common Expression Language)
    implementation(enforcedPlatform("org.projectnessie.cel:cel-bom:0.3.5"))
    implementation("org.projectnessie.cel:cel-tools")
    implementation("org.projectnessie.cel:cel-jackson")

}

application {
    // Define the main class for the application.
    mainClass = 'pub.sub.matching.App'
    applicationDefaultJvmArgs = ["-Xms4096m", "-Xmx4096m"]
}

shadowJar {
    mergeServiceFiles()
}

//Based on https://github.com/johnrengelman/shadow/issues/138
task AppJar(type: Jar, dependsOn: shadowJar) {
    archiveFileName = "appIsolated.jar"
    destinationDirectory.set(file("$rootDir"))
    manifest {
        attributes('Main-Class': 'pub.sub.matching.App')
    }
    from zipTree(shadowJar.archiveFile)
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
